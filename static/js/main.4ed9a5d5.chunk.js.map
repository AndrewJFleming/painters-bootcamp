{"version":3,"sources":["layout/Homepage/Main/Main.module.css","layout/NewArticle/NewArticle.module.css","layout/Homepage/Heading/Heading.module.css","layout/ViewArticle/ViewArticle.module.css","config/firebase-redux.js","components/ArticleCard/ArticleCard.js","config/firebase.js","layout/Homepage/Heading/Heading.js","layout/Homepage/Main/Main.js","layout/ViewArticle/ViewArticle.js","layout/NewArticle/NewArticle.js","layout/LoginPage/LoginPage.js","layout/RouterManager/RouterManager.js","App.js","serviceWorker.js","index.js","components/ArticleCard/ArticleCard.module.css"],"names":["module","exports","rootReducer","combineReducers","firebase","firebaseReducer","store","createStore","rrfProps","config","dispatch","ArticleCard","props","Card","className","classes","to","pathname","data","id","state","article","CardImg","top","width","src","featuredImage","alt","CardBody","CardTitle","title","CardSubtitle","Badge","ArticleLabel","categoryLabel","createDate","ts","date","Date","getFullYear","getMonth","getDate","timeStampToString","seconds","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Heading","toggle","setState","isOpen","nextProps","nextContext","auth","isEmpty","currentUser","getIdTokenResult","then","claim","console","log","Navbar","expand","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","style","color","displayName","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","Link","Button","signOut","Component","enhance","connect","profile","db","firestore","Main","getMyArticles","collection","limit","get","docs","empty","allArticles","forEach","doc","push","articles","isLoaded","mainTitle","Container","map","index","key","ViewArticle","getArticleByID","aid","colllection","exists","history","idLoaded","location","hasOwnProperty","match","params","Article","ImageContainer","Image","ArticleInfo","Title","parse","lastModified","ArticleMain","content","withRouter","storageRef","storage","NewArticle","modules","toolbar","container","size","clipboard","matchVisual","formats","onChangeArticleTitle","value","onChangeArticleContent","onChangePublish","val","isPublished","submitArticle","createUserID","uid","add","res","catch","err","uploadImageCallBack","e","Promise","resolve","reject","a","file","target","files","fileName","uuidv4","ref","child","put","snapshot","getDownloadURL","downloadURL","success","link","hasFeaturedImage","SectionTitle","Row","Col","xs","sm","md","lg","xl","FormGroup","Label","FormTitle","Input","type","name","placeholder","onChange","ReactQuill","el","quill","CardHeader","accept","ImageUploader","uploadState","FeaturedImg","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","LoginPage","firebaseAuth","AdminOnly","ComposedComponent","isPass","idTokenResult","claims","RouterManager","path","exact","component","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,UAAY,0B,+ECAlED,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,UAAY,8BAA8B,UAAY,8BAA8B,aAAe,iCAAiC,WAAa,+BAA+B,WAAa,+BAA+B,cAAgB,kCAAkC,YAAc,gCAAgC,OAAS,6B,mBCAzXD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,YAAc,6BAA6B,eAAiB,gCAAgC,aAAe,8BAA8B,aAAe,8BAA8B,OAAS,wBAAwB,KAAO,wB,mBCAjRD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,QAAU,6BAA6B,eAAiB,oCAAoC,MAAQ,2BAA2B,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,YAAc,mC,oJCGvTC,EAAcC,YAAiB,CACjCC,SAAUC,oBAIRC,EAAQC,YAAYL,EADL,IAMfM,EAAW,CACbJ,WACAK,OANc,GAOdC,SAAUJ,EAAMI,U,sOCPpB,IAoCeC,EApCK,SAACC,GACjB,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAWC,IAAQJ,aACrB,kBAAC,IAAD,CAAMK,GAAI,CACNC,SAAU,YAAcL,EAAMM,KAAKC,GACnCC,MAAO,CAAEC,QAAST,EAAMM,QAExB,kBAACI,EAAA,EAAD,CACIC,KAAG,EACHC,MAAM,OACNC,IAAKb,EAAMM,KAAKQ,cAChBC,IAAI,gBAGZ,kBAACC,EAAA,EAAD,CAAUd,UAAWC,IAAQa,UACzB,kBAACC,EAAA,EAAD,CAAWf,UAAWC,IAAQc,WAC9B,kBAAC,IAAD,CAAMb,GAAI,CACNC,SAAU,YAAcL,EAAMM,KAAKC,GACnCC,MAAO,CAACC,QAAST,EAAMM,QAEtBN,EAAMM,KAAKY,QAGhB,kBAACC,EAAA,EAAD,CAAcjB,UAAWC,IAAQgB,cAC7B,kBAACC,EAAA,EAAD,CAAOlB,UAAWC,IAAQkB,cACrBrB,EAAMM,KAAKgB,eAEhB,kBAACF,EAAA,EAAD,CAAOlB,UAAWC,IAAQoB,YAhCvC,SAA2BC,GAC9B,IAAMC,EAAO,IAAIC,KAAQ,IAAHF,GACtB,OAAOC,EAAKE,cAAgB,KAAOF,EAAKG,WAAa,GAAK,IAAMH,EAAKI,UA+BhDC,CAAkB9B,EAAMM,KAAKiB,WAAWQ,cC1B/DvC,gBAVqB,CACnBwC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAKT9C,cAEeA,Q,iBCPX+C,E,kDACF,WAAYvC,GAAQ,IAAD,8BACf,cAAMA,IAMVwC,OAAQ,WACJ,EAAKC,SAAS,CACVC,QAAS,EAAKlC,MAAMkC,UAPxB,EAAKlC,MAAM,CACPkC,QAAQ,GAHG,E,sEAaOC,EAAWC,GAC7BD,EAAUE,KAAKC,SACftD,EAASqD,OAAOE,YAAYC,mBACvBC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,Q,+BAMxB,OACI,kBAACG,EAAA,EAAD,CAAQC,OAAO,KAAKpD,UAAWC,IAAQkD,QACnC,kBAACE,EAAA,EAAD,CAAaC,KAAK,IAAItD,UAAWC,IAAQoD,aAAzC,sBACA,kBAACE,EAAA,EAAD,CAAeC,QAASC,KAAKnB,SAC7B,kBAACoB,EAAA,EAAD,CAAUlB,OAAQiB,KAAKnD,MAAMkC,OAAQmB,QAAM,GACvC,kBAACC,EAAA,EAAD,CAAK5D,UAAU,UAAU2D,QAAM,GAC3B,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASR,KAAK,eAAetD,UAAWC,IAAQ6D,SAAhD,iBAGR,yBAAKC,MAAO,CAACC,MAAO,YAEZP,KAAK3D,MAAM6C,KAAKC,QAChB,GACAa,KAAK3D,MAAM6C,KAAKsB,aAGxB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAgBC,KAAG,EAACC,OAAK,EAACrE,UAAWC,IAAQkE,gBAA7C,WAGA,kBAACG,EAAA,EAAD,CAAcC,OAAK,EAACvE,UAAWC,IAAQqE,cAE/Bb,KAAK3D,MAAM6C,KAAKC,QACZ,kBAAC4B,EAAA,EAAD,CAAcxE,UAAWC,IAAQuE,cAC7B,kBAAC,IAAD,CAAMtE,GAAI,CAACC,SAAU,UAAWH,UAAWC,IAAQwE,MAAnD,UAKJ,kBAACD,EAAA,EAAD,CAAcxE,UAAWC,IAAQuE,cAC7B,kBAACE,EAAA,EAAD,CAAQlB,QAAS,kBAAMlE,EAASqD,OAAOgC,WAAW3E,UAAWC,IAAQyE,QAArE,mB,GAvDlBE,aA2EPC,EAPCC,aACZ,oBAAExF,SAAF,MAAkC,CAC9BqD,KADJ,EAAaA,KAEToC,QAFJ,EAAmBA,WAMRF,CAAQxC,G,mCC7EjB2C,EAAK1F,EAAS2F,YAkELC,E,kDA/DX,WAAYpF,GAAQ,IAAD,8BACf,cAAMA,IAWdqF,cAAgB,WACZH,EACKI,WAAW,YACXC,MAAM,GACNC,MACAvC,MAAK,SAAAwC,GACF,IAAIA,EAAKC,MAAM,CACX,IAAIC,EAAc,GAClBF,EAAKG,SAAS,SAAUC,GACpB,IAAMpF,EAAO,aACTF,GAAIsF,EAAItF,IACLsF,EAAIvF,QAGXqF,EAAYG,KAAKrF,MAGrB,EAAKgC,SAAS,CACVsD,SAAUJ,IACX,WACC,EAAKlD,SAAS,CACVuD,UAAU,YA/B1B,EAAKxF,MAAM,CACPwF,UAAU,EACVD,SAAU,IAJC,E,gEASnBpC,KAAK0B,kB,+BAgCD,OACI,6BACI,wBAAInF,UAAWC,IAAQ8F,WAAvB,sBACA,kBAACC,EAAA,EAAD,CAAWhG,UAAWC,IAAQ+F,WAEtBvC,KAAKnD,MAAMwF,SACPrC,KAAKnD,MAAMuF,SAASI,KAAI,SAAC1F,EAAS2F,GAC9B,OACI,kBAAC,EAAD,CACIC,IAAKD,EACL9F,KAAMG,OAIhB,S,GAxDXqE,a,sCCHbI,GAAK1F,EAAS2F,YAEdmB,G,kDACF,WAAYtG,GAAQ,IAAD,8BACf,cAAMA,IAwBVuG,eAAiB,SAACC,GACdtB,GAAGuB,YAAa,YACXZ,IAAIW,GACJhB,MACAvC,MAAK,SAAA4C,GACCA,EAAIa,OACH,EAAKjE,SAAS,CACVhC,QAASoF,EAAIvF,SACd,WACC,EAAKmC,SAAS,CACVuD,UAAU,OAIlB,EAAKhG,MAAM2G,QAAQb,KAAK,CAACzF,SAAU,UAvChC,EA4CnByB,kBAAoB,SAACN,GACjB,IAAMC,EAAO,IAAIC,KAAQ,IAAHF,GACtB,OAAOC,EAAKE,cAAgB,KAAOF,EAAKG,WAAa,GAAK,IAAMH,EAAKI,WA5CrE,EAAKrB,MAAM,CACPC,QAAS,GACTmG,UAAU,GAEdzD,QAAQC,IAAI,EAAKpD,OANF,E,gEASE,IAAD,OACiB,cAA9B2D,KAAK3D,MAAM6G,SAASrG,MAChBmD,KAAK3D,MAAM6G,SAASrG,MAAMsG,eAAe,YACxCnD,KAAKlB,SAAS,CACVhC,QAASkD,KAAK3D,MAAM6G,SAASrG,MAAMC,UACpC,WACC,EAAKgC,SAAS,CACVuD,UAAU,OAKtBrC,KAAK4C,eAAe5C,KAAK3D,MAAM+G,MAAMC,OAAOzG,M,+BA6BhD,OAAGoD,KAAKnD,MAAMwF,SAEN,kBAACE,EAAA,EAAD,CAAWhG,UAAWC,IAAQ+F,WAC1B,yBAAKhG,UAAWC,IAAQ8G,SACpB,yBAAK/G,UAAWC,IAAQ+G,gBACpB,yBAAKhH,UAAWC,IAAQgH,MACpBtG,IAAK8C,KAAKnD,MAAMC,QAAQK,cACxBC,IAAK4C,KAAKnD,MAAMC,QAAQS,QAE5B,yBAAKhB,UAAWC,IAAQiH,aACpB,wBAAIlH,UAAWC,IAAQkH,OAClBC,KAAM3D,KAAKnD,MAAMC,QAAQS,QAE9B,yBAAKhB,UAAWC,IAAQuB,MACnBiC,KAAK7B,kBAAkB6B,KAAKnD,MAAMC,QAAQ8G,aAAaxF,YAIpE,yBAAK7B,UAAWC,IAAQqH,aACnBF,KAAM3D,KAAKnD,MAAMC,QAAQgH,YAOtC,+C,GA7EU3C,aAqFX4C,eAAWpB,I,sJCpFpBpB,GAAK1F,EAAS2F,YACdwC,GAAanI,EAASoI,UA8ObC,G,kDA3OX,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IAed8H,QAAU,CACNC,QAAS,CACLC,UAAW,CACP,CAAC,CAAE,OAAU,KAAO,CAAE,OAAU,KAAO,CAAE,KAAQ,KACjD,CAAC,CAACC,KAAM,KACR,CAAC,OAAQ,SAAU,YAAY,SAAU,cACzC,CAAC,CAAC,KAAQ,WAAY,CAAC,KAAQ,UAAW,CAAC,OAAU,MAAO,CAAC,OAAU,OACvE,CAAC,OAAQ,SACT,CAAC,SAAU,CAAC,gBAMpBC,UAAW,CACPC,aAAa,IA/BE,EAmCvBC,QAAU,CACN,SACA,OACA,OACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,SACA,OACA,QACA,QACA,cAlDmB,EAqDnBC,qBAAuB,SAACC,GACpB,EAAK7F,SAAS,CACVhC,QAAQ,2BACD,EAAKD,MAAMC,SADX,IAEHS,MAAOoH,OAzDA,EA8DnBC,uBAAyB,SAACD,GACtB,EAAK7F,SAAS,CACVhC,QAAQ,2BACD,EAAKD,MAAMC,SADX,IAEHgH,QAASa,OAlEF,EAuEnBE,gBAAkB,SAACC,GACf,EAAKhG,SAAS,CACVhC,QAAQ,2BACD,EAAKD,MAAMC,SADX,IAEHiI,YAAqB,SAARD,OA3EN,EAgFnBE,cAAgB,WACZ,IAAMlI,EAAU,EAAKD,MAAMC,QAC3BA,EAAQmI,aAAe,EAAK5I,MAAM6C,KAAKgG,IACvC3D,GAAGI,WAAW,YACTwD,IAAIrI,GAASwC,MAAK,SAAA8F,GACf5F,QAAQC,IAAI2F,MAEfC,OAAM,SAAAC,GAAG,OAAI9F,QAAQC,IAAI6F,OAvFf,EAuInBC,oBAAsB,SAACC,GACnB,OAAO,IAAIC,QAAJ,yCAAY,WAAOC,EAASC,GAAhB,kBAAAC,EAAA,sDACTC,EAAOL,EAAEM,OAAOC,MAAM,GACtBC,EAAWC,gBACjBjC,GAAWkC,MAAMC,MAAO,YAAcH,GAAUI,IAAIP,GAC/CvG,KADL,yCACU,WAAM+G,GAAN,gBAAAT,EAAA,sEAEwB5B,GAAWkC,MAAMC,MAAO,YAAcH,GAAUM,iBAFxE,OAEIC,EAFJ,OAGFb,EAAQ,CACJc,SAAS,EACT7J,KAAM,CAAC8J,KAAMF,KALf,2CADV,uDAHe,2CAAZ,0DAtIP,EAAK1J,MAAM,CACPC,QAAQ,CACJS,MAAM,GACNuG,QAAQ,GACRlG,WAAY,IAAIG,KAChB2I,kBAAkB,EAClBvJ,cAAe,GACf4H,aAAa,EACbnB,aAAc,IAAI7F,KAClBkH,aAAc,KAXP,E,qDAuJT,IAAD,OACL,OACI,kBAAC1C,EAAA,EAAD,KACI,wBAAIhG,UAAWC,KAAQmK,cAAvB,eACA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG3K,UAAWC,KAAQqK,KACzD,kBAACM,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAO7K,UAAWC,KAAQ6K,WAA1B,SACA,kBAACC,GAAA,EAAD,CACIC,KAAK,OACLC,KAAK,eACL5K,GAAG,eACH6K,YAAY,GACZC,SAAU,SAAClC,GAAD,OAAO,EAAKd,qBAAqBc,EAAEM,OAAOnB,QACpDA,MAAO3E,KAAKnD,MAAMC,QAAQS,SAGlC,kBAAC4J,GAAA,EAAD,KACI,kBAAC,KAAD,CACI5K,UAAWC,KAAQmL,WACnBzB,IAAK,SAAC0B,GAAD,OAAQ,EAAKC,MAAQD,GAC1BjD,MAAO3E,KAAKnD,MAAMC,QAAQgH,QAC1B4D,SAAU,SAAClC,GAAD,OAAO,EAAKZ,uBAAuBY,IAE7C/J,OAAQuE,KAAKmE,QACbM,QAASzE,KAAKyE,YAI1B,kBAACoC,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG3K,UAAWC,KAAQqK,KACzD,kBAACvK,EAAA,EAAD,KACI,kBAACwL,GAAA,EAAD,CAAYvL,UAAWC,KAAQsL,YAA/B,oBAGA,kBAACzK,EAAA,EAAD,KACI,kBAAC8J,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAO7K,UAAWC,KAAQ4K,OAA1B,WACA,kBAACE,GAAA,EAAD,CAAOC,KAAK,SAASC,KAAK,UAAU5K,GAAG,UACnC8K,SAAU,SAAClC,GAAD,OAAO,EAAKX,gBAAgBW,EAAEM,OAAOnB,SAE/C,yCACA,0CAGR,kBAACwC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAO7K,UAAWC,KAAQ4K,OAA1B,kBACA,kBAACE,GAAA,EAAD,CAAOC,KAAK,OAAOQ,OAAO,UAAUxL,UAAWC,KAAQwL,cACvDN,SAAQ,yCAAE,WAAOlC,GAAP,gBAAAI,EAAA,sEACoB,EAAKL,oBAAoBC,GAD7C,QACAyC,EADA,QAESzB,SACX,EAAK1H,SAAS,CACV4H,kBAAkB,EAClB5J,QAAQ,2BACD,EAAKD,MAAMC,SADX,IAEHK,cAAe8K,EAAYtL,KAAK8J,SAPtC,2CAAF,wDAgBJzG,KAAKnD,MAAM6J,iBACP,yBAAKxJ,IAAK8C,KAAKnD,MAAMC,QAAQK,cAAeZ,UAAWC,KAAQ0L,cAAiB,IAI5F,kBAACf,GAAA,EAAD,KACI,kBAAClG,EAAA,EAAD,CACI1E,UAAWC,KAAQyE,OACnBlB,QAAS,SAACyF,GAAD,OAAO,EAAKR,kBAFzB,oB,GA7NX7D,a,qBCLnBgH,GAAW,CACbC,WAAY,QACZC,iBAAkB,IAClBC,cAAe,CACXzM,EAASqD,KAAKqJ,mBAAmBC,cAInCC,G,kDACF,WAAYpM,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAM,GAFI,E,qDAQf,OACI,kBAAC0F,EAAA,EAAD,KACI,kBAAC,KAAD,CAAoB4F,SAAUA,GAAUO,aAAc7M,EAASqD,c,GAXvDiC,aAwBTC,GAPCC,aACZ,oBAAExF,SAAF,MAAkC,CAC9BqD,KADJ,EAAaA,KAEToC,QAFJ,EAAmBA,WAMRF,CAAQqH,IC1BjBE,GAAY,SAACC,EAAmB1J,GAAU,IACtCyJ,EADqC,kDAEvC,WAAYtM,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAM,CACPgM,QAAQ,GAHG,EAFoB,iEASjB,IAAD,OACb3J,EAAKC,QAYLa,KAAK3D,MAAM2G,QAAQb,KAAK,UAXxBtG,SAAgBuD,YAAYC,mBACvBC,MAAK,SAACwJ,GAC8B,kBAA9BA,EAAcC,OAAOxB,KACpB,EAAKzI,SAAS,CACV+J,QAAQ,IAGZ,EAAKxM,MAAM2G,QAAQb,KAAK,eAlBL,+BA2BnC,OAAGnC,KAAKnD,MAAMgM,OACH,kBAACD,EAAD,CAAmB1F,SAAUlD,KAAK3D,MAAM6G,SAAUF,QAAShD,KAAK3D,MAAM2G,QAAS9D,KAAMA,IAGxF,gDA/B2B,GACnBiC,aAsCxB,OAAOwH,GAGLK,G,kDACF,WAAY3M,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAM,GAFI,E,qDAQf,OACI,6BACA,kBAAC,EAAD,MAGImD,KAAK3D,MAAM6C,KAAKmD,SACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4G,KAAK,IAAIC,OAAK,GACrB,kBAAC,EAAD,OAEA,kBAAC,IAAD,CAAOD,KAAK,UACZ,kBAAC,GAAD,OAEA,kBAAC,IAAD,CAAOA,KAAK,gBACZ,kBAAC,GAAD,OAEA,kBAAC,IAAD,CAAOA,KAAK,eAAeE,UAAWR,GAAUzE,GAAYlE,KAAK3D,MAAM6C,SAGzE,Q,GA5BciC,aA2CbC,GAPCC,aACZ,oBAAExF,SAAF,MAAkC,CAC9BqD,KADJ,EAAaA,KAEToC,QAFJ,EAAmBA,WAMRF,CAAQ2C,YAAWiF,KC1EnBI,OAdf,WACE,OACE,yBAAK7M,UAAU,OACb,kBAAC,IAAD,CAAUR,MTQLA,GSPH,kBAAC,6BTWEE,ESVH,kBAAC,IAAD,KACE,kBAAC,GAAD,WCJUoN,QACW,cAA7BC,OAAOpG,SAASqG,UAEe,UAA7BD,OAAOpG,SAASqG,UAEhBD,OAAOpG,SAASqG,SAASnG,MACvB,2D,OCXNoG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzK,MAAK,SAAA0K,GACJA,EAAaC,gBAEd5E,OAAM,SAAA6E,GACL1K,QAAQ0K,MAAMA,EAAMC,a,mBExI5B1O,EAAOC,QAAU,CAAC,YAAc,iCAAiC,UAAY,+BAA+B,SAAW,8BAA8B,UAAY,+BAA+B,aAAe,kCAAkC,aAAe,kCAAkC,WAAa,mC","file":"static/js/main.4ed9a5d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"Main_mainTitle__1mrwg\",\"Container\":\"Main_Container__MjhHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"NewArticle_Label__DLyLz\",\"FormTitle\":\"NewArticle_FormTitle__2zcL-\",\"FormGroup\":\"NewArticle_FormGroup__GcqkW\",\"SectionTitle\":\"NewArticle_SectionTitle__9fSPK\",\"CardHeader\":\"NewArticle_CardHeader__hrgm0\",\"ReactQuill\":\"NewArticle_ReactQuill__3ZurV\",\"ImageUploader\":\"NewArticle_ImageUploader__3wiLB\",\"FeaturedImg\":\"NewArticle_FeaturedImg__2d90t\",\"Button\":\"NewArticle_Button__3_sN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Heading_Navbar__5wbbA\",\"NavbarBrand\":\"Heading_NavbarBrand__k_NrH\",\"DropdownToggle\":\"Heading_DropdownToggle__2xX9B\",\"DropdownMenu\":\"Heading_DropdownMenu__2gqvM\",\"DropdownItem\":\"Heading_DropdownItem__2sG2J\",\"Button\":\"Heading_Button__-6b5f\",\"Link\":\"Heading_Link__1qads\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ViewArticle_Container__3kFIu\",\"Article\":\"ViewArticle_Article__LAvBd\",\"ImageContainer\":\"ViewArticle_ImageContainer__19MPr\",\"Image\":\"ViewArticle_Image__3EujB\",\"Title\":\"ViewArticle_Title__3hRYP\",\"ArticleInfo\":\"ViewArticle_ArticleInfo__McJIH\",\"Date\":\"ViewArticle_Date__1lq64\",\"ArticleMain\":\"ViewArticle_ArticleMain__3kRsv\"};","import { combineReducers, createStore } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport * as firebase from 'firebase';\r\n\r\nconst rootReducer = combineReducers ({\r\n    firebase: firebaseReducer\r\n})\r\n\r\nconst initialState = {};\r\nconst store = createStore(rootReducer, initialState);\r\nconst rrfConfig = {\r\n\r\n};\r\n\r\nconst rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch\r\n}\r\n\r\nexport function getReduxStore(){\r\n    return store;\r\n}\r\n\r\nexport function getRrfProp(){\r\n    return rrfProps;\r\n}","import React from 'react';\r\nimport { Card, CardImg, CardTitle, CardSubtitle, CardBody, Badge } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './ArticleCard.module.css';\r\n\r\nexport function timeStampToString(ts) {\r\n    const date = new Date(ts*1000)\r\n    return date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate()\r\n}\r\n\r\nconst ArticleCard = (props) => {\r\n    return(\r\n        <Card className={classes.ArticleCard}>\r\n            <Link to={{\r\n                pathname: \"/article/\" + props.data.id,\r\n                state: { article: props.data }\r\n            }}>\r\n                <CardImg\r\n                    top\r\n                    width=\"100%\"\r\n                    src={props.data.featuredImage}\r\n                    alt=\"Card Image\"\r\n                />\r\n            </Link>\r\n            <CardBody className={classes.CardBody}>\r\n                <CardTitle className={classes.CardTitle}>\r\n                <Link to={{\r\n                    pathname: \"/article/\" + props.data.id,\r\n                    state: {article: props.data}\r\n                }}>\r\n                    {props.data.title}\r\n                </Link>\r\n                </CardTitle>\r\n                <CardSubtitle className={classes.CardSubtitle}>\r\n                    <Badge className={classes.ArticleLabel}>\r\n                        {props.data.categoryLabel}\r\n                    </Badge>\r\n                    <Badge className={classes.createDate}>\r\n                        {timeStampToString(props.data.createDate.seconds)}\r\n                    </Badge>\r\n                </CardSubtitle>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ArticleCard;","import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCmDAGtap9Sv2GF-7IzCb0Tw3uZwYoYo_M\",\r\n    authDomain: \"painters-bootcamp.firebaseapp.com\",\r\n    databaseURL: \"https://painters-bootcamp.firebaseio.com\",\r\n    projectId: \"painters-bootcamp\",\r\n    storageBucket: \"painters-bootcamp.appspot.com\",\r\n    messagingSenderId: \"119215133477\",\r\n    appId: \"1:119215133477:web:ee717012c322e6715e00cc\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n  firebase.firestore()\r\n\r\n  export default firebase;","import React, {Component} from 'react';\r\nimport { Button, Navbar, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, Collapse, Container, Card, CardImg, CardTitle, CardSubtitle, CardBody, Badge, NavbarToggler, DropdownItem } from 'reactstrap';\r\nimport ArticleCard from '../../../components/ArticleCard/ArticleCard';\r\nimport { connect } from 'react-redux';\r\nimport firebase from '../../../config/firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from 'firebase';\r\nimport classes from './Heading.module.css';\r\n\r\nclass Heading extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isOpen: false\r\n        }\r\n    }\r\n\r\n    toggle= () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if(!nextProps.auth.isEmpty){\r\n            firebase.auth().currentUser.getIdTokenResult()\r\n                .then(claim => {\r\n                    console.log(claim)\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Navbar expand=\"md\" className={classes.Navbar}>\r\n                <NavbarBrand href=\"/\" className={classes.NavbarBrand}>Painter's Bootcamp</NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle}/>\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/new-article\" className={classes.NavLink}>New Article</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <div style={{color: \"#000000\"}}>\r\n                        {\r\n                            this.props.auth.isEmpty ?\r\n                            '':\r\n                            this.props.auth.displayName\r\n                        }\r\n                    </div>\r\n                    <UncontrolledDropdown>\r\n                        <DropdownToggle nav caret className={classes.DropdownToggle}>\r\n                            Options\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right className={classes.DropdownMenu}>\r\n                            {\r\n                                this.props.auth.isEmpty ?\r\n                                    <DropdownItem className={classes.DropdownItem}>\r\n                                        <Link to={{pathname: '/login'}} className={classes.Link}>\r\n                                            Login\r\n                                        </Link>\r\n                                    </DropdownItem>\r\n                                    :\r\n                                    <DropdownItem className={classes.DropdownItem}>\r\n                                        <Button onClick={() => firebase.auth().signOut()} className={classes.Button}>\r\n                                            Logout\r\n                                        </Button>\r\n                                    </DropdownItem>\r\n                            }\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                </Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nconst enhance = connect(\r\n    ({firebase: {auth, profile}}) => ({\r\n        auth,\r\n        profile\r\n    })\r\n)\r\n\r\nexport default enhance(Heading);","import React, {Component} from 'react';\r\nimport { Container, Card, CardImg, CardTitle, CardSubtitle, CardBody, Badge } from 'reactstrap';\r\nimport firebase from '../../../config/firebase';\r\nimport classes from './Main.module.css';\r\n\r\nimport ArticleCard from '../../../components/ArticleCard/ArticleCard';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isLoaded: false,\r\n            articles: []\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n    this.getMyArticles()\r\n}\r\n\r\ngetMyArticles = () => {\r\n    db\r\n        .collection('Articles' )\r\n        .limit(8)\r\n        .get()\r\n        .then(docs => {\r\n            if(!docs.empty){\r\n                let allArticles = [];\r\n                docs.forEach( function (doc) {\r\n                    const article = {\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }\r\n\r\n                    allArticles.push(article)\r\n                })\r\n\r\n                this.setState({\r\n                    articles: allArticles\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true\r\n                    })\r\n                })\r\n            }\r\n        })\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1 className={classes.mainTitle}>Painter's Bootcamp</h1>\r\n                <Container className={classes.Container}>\r\n                    {\r\n                        this.state.isLoaded ?\r\n                            this.state.articles.map((article, index) => {\r\n                                return(\r\n                                    <ArticleCard \r\n                                        key={index}\r\n                                        data={article}\r\n                                    />\r\n                                )\r\n                            })\r\n                            : ''\r\n                    }\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport classes from './ViewArticle.module.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport parse from 'html-react-parser';\r\nimport { Container } from 'reactstrap';\r\nimport firebase from '../../config/firebase';\r\nconst db = firebase.firestore() \r\n\r\nclass ViewArticle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            article: {},\r\n            idLoaded: false,\r\n        }\r\n        console.log(this.props)\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(this.props.location.state !== 'undefined'){\r\n            if(this.props.location.state.hasOwnProperty('article')){\r\n                this.setState({\r\n                    article: this.props.location.state.article\r\n                }, () => {\r\n                    this.setState({\r\n                        isLoaded: true\r\n                    })\r\n                })\r\n            }\r\n        } else {\r\n            this.getArticleByID(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    getArticleByID = (aid) => {\r\n        db.colllection( 'Articles' )\r\n            .doc(aid)\r\n            .get()\r\n            .then(doc => {\r\n                if(doc.exists){\r\n                    this.setState({\r\n                        article: doc.data()\r\n                    }, () => {\r\n                        this.setState({\r\n                            isLoaded: true\r\n                        })\r\n                    })\r\n                }else{\r\n                    this.props.history.push({pathname: '/'})\r\n                }\r\n            })\r\n    }\r\n\r\n    timeStampToString = (ts) => {\r\n        const date = new Date(ts*1000)\r\n        return date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate()\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoaded){\r\n            return(\r\n                <Container className={classes.Container}>\r\n                    <div className={classes.Article}>\r\n                        <div className={classes.ImageContainer}>\r\n                            <img className={classes.Image}\r\n                                src={this.state.article.featuredImage}\r\n                                alt={this.state.article.title}\r\n                            />\r\n                            <div className={classes.ArticleInfo}>\r\n                                <h1 className={classes.Title}>\r\n                                    {parse(this.state.article.title)}\r\n                                </h1>\r\n                                <div className={classes.Date}>\r\n                                    {this.timeStampToString(this.state.article.lastModified.seconds)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.ArticleMain}>\r\n                            {parse(this.state.article.content)}\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    loading...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(ViewArticle);","import React, {Component} from 'react';\r\nimport classes from './NewArticle.module.css';\r\nimport { Container, Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Input, Button } from 'reactstrap';\r\n// import Compressor from 'compressorjs';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport firebase from '../../config/firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst db = firebase.firestore();\r\nconst storageRef = firebase.storage();\r\n\r\nclass NewArticle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            article:{\r\n                title:'',\r\n                content:'',\r\n                createDate: new Date(),\r\n                hasFeaturedImage: false,\r\n                featuredImage: '',\r\n                isPublished: false,\r\n                lastModified: new Date(),\r\n                createUserID: '',\r\n            }\r\n        }\r\n    }\r\n    \r\nmodules = {\r\n    toolbar: {\r\n        container: [\r\n            [{ 'header': '1' }, { 'header': '2' }, { 'font': []}],\r\n            [{size: []}],\r\n            ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n            [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n            ['link', 'image'],\r\n            ['clean'], ['code-block']\r\n        ],\r\n        // handlers: {\r\n        //     'image': () => this.quillImageCallBack()\r\n        // }\r\n    },\r\n    clipboard: {\r\n        matchVisual: false,\r\n    },\r\n}\r\n\r\nformats = [\r\n    'header',\r\n    'font',\r\n    'size',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'blockquote',\r\n    'list',\r\n    'bullet',\r\n    'indent',\r\n    'link',\r\n    'image',\r\n    'video',\r\n    'code-block',\r\n]\r\n\r\n    onChangeArticleTitle = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article,\r\n                title: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeArticleContent = (value) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article,\r\n                content: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangePublish = (val) => {\r\n        this.setState({\r\n            article: {\r\n                ...this.state.article,\r\n                isPublished: val === 'True'\r\n            }\r\n        })\r\n    }\r\n\r\n    submitArticle = () => {\r\n        const article = this.state.article;\r\n        article.createUserID = this.props.auth.uid\r\n        db.collection(\"Articles\")\r\n            .add(article).then(res => {\r\n                console.log(res)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    // fileCompress = (file) => {\r\n    //     return new Promise((resolve, reject) => {\r\n    //         new Compressor(file, {\r\n    //             file: 'File',\r\n    //             quality: 0.5,\r\n    //             maxWidth: 640,\r\n    //             maxHeight: 640,\r\n    //             success(file) {\r\n    //                 return resolve({\r\n    //                     success: true,\r\n    //                     file: file\r\n    //                 })\r\n    //             },\r\n    //             error(err){\r\n    //                 return resolve({\r\n    //                     success: false,\r\n    //                     message: err.message\r\n    //                 })\r\n    //             }\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    // quillImageCallBack = () => {\r\n        // const input = document.createElement('input')\r\n        // input.setAttribute('type', 'file')\r\n        // input.setAttribute('accept', 'image/*')\r\n        // input.click()\r\n        // input.onChange = async () => {\r\n        //     const file = input.files[0];\r\n            // const compressState = await this.fileCompress(file);\r\n            // if(compressState.success){\r\n    //             const fileName = uuidv4();\r\n    //             storageRef.ref().child( 'Articles/' + fileName).put(compressState.file)\r\n    //                 .then(async snapshot => {\r\n    \r\n    //                     const downloadURL = await storageRef.ref().child( 'Articles/' + fileName).getDownloadURL()\r\n    //                     let quill = this.quill.getEditor()\r\n    //                     const range = quill.getSelection(true)\r\n    //                     quill.insertEmbed(range.index, 'image', downloadURL)\r\n    //                 })\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    uploadImageCallBack = (e) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const file = e.target.files[0];\r\n            const fileName = uuidv4();\r\n            storageRef.ref().child( 'Articles/' + fileName).put(file)\r\n                .then(async snapshot => {\r\n\r\n                    const downloadURL = await storageRef.ref().child( 'Articles/' + fileName).getDownloadURL()\r\n                    resolve({\r\n                        success: true,\r\n                        data: {link: downloadURL}\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <h2 className={classes.SectionTitle}>New Article</h2>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8} lg={9} xl={9} className={classes.Col}>\r\n                        <FormGroup>\r\n                            <Label className={classes.FormTitle}>Title</Label>\r\n                            <Input \r\n                                type=\"text\" \r\n                                name=\"articleTitle\" \r\n                                id=\"articleTitle\" \r\n                                placeholder=\"\"\r\n                                onChange={(e) => this.onChangeArticleTitle(e.target.value)}\r\n                                value={this.state.article.title}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <ReactQuill\r\n                                className={classes.ReactQuill}\r\n                                ref={(el) => this.quill = el}\r\n                                value={this.state.article.content}\r\n                                onChange={(e) => this.onChangeArticleContent(e)}\r\n                                // theme=\"snow\"\r\n                                module={this.modules}\r\n                                formats={this.formats}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs={12} sm={12} md={4} lg={3} xl={3} className={classes.Col}>\r\n                        <Card>\r\n                            <CardHeader className={classes.CardHeader}>\r\n                                Article Settings\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <FormGroup>\r\n                                    <Label className={classes.Label}>Publish</Label>\r\n                                    <Input type=\"select\" name='publish' id=\"publish\" \r\n                                        onChange={(e) => this.onChangePublish(e.target.value)}\r\n                                    >\r\n                                        <option>False</option>\r\n                                        <option>True</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className={classes.Label}>Featured Image</Label>\r\n                                    <Input type='file' accept='image/*' className={classes.ImageUploader}\r\n                                    onChange={async (e) => {\r\n                                        const uploadState = await this.uploadImageCallBack(e);\r\n                                        if(uploadState.success){\r\n                                            this.setState({\r\n                                                hasFeaturedImage: true,\r\n                                                article:{\r\n                                                    ...this.state.article,\r\n                                                    featuredImage: uploadState.data.link\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n\r\n                                    </Input>\r\n\r\n                                    {\r\n                                        this.state.hasFeaturedImage ?\r\n                                            <img src={this.state.article.featuredImage} className={classes.FeaturedImg}/> : ''\r\n                                    }\r\n\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Button\r\n                                        className={classes.Button}\r\n                                        onClick={(e) => this.submitArticle()}>\r\n                                            Submit\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewArticle;","import React, {Component} from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from '../../config/firebase';\r\nimport { auth } from 'firebase';\r\n\r\nconst uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInSuccessUrl: '/',\r\n    signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n    ]\r\n}\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst enhance = connect(\r\n    ({firebase: {auth, profile}}) => ({\r\n        auth,\r\n        profile\r\n    })\r\n)\r\n\r\nexport default enhance(LoginPage);","import React, {Component} from 'react';\r\nimport { Container, Card, CardImg, CardTitle, CardSubtitle, CardBody, Badge } from 'reactstrap';\r\nimport { BrowserRouter as Router, Switch, Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Heading from '../Homepage/Heading/Heading';\r\nimport Main from '../Homepage/Main/Main';\r\nimport ViewArticle from '../ViewArticle/ViewArticle';\r\nimport NewArticle from '../NewArticle/NewArticle';\r\nimport LoginPage from '../LoginPage/LoginPage';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nconst AdminOnly = (ComposedComponent, auth) => {\r\n    class AdminOnly extends Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state={\r\n                isPass: false\r\n            }\r\n        }\r\n\r\n        componentWillMount() {\r\n            if(!auth.isEmpty){\r\n                firebase.auth().currentUser.getIdTokenResult()\r\n                    .then((idTokenResult) => {\r\n                        if(idTokenResult.claims.type === 'administrator'){\r\n                            this.setState({\r\n                                isPass: true\r\n                            })\r\n                        } else {\r\n                            this.props.history.push('/login')\r\n                        }\r\n                    })\r\n            } else {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if(this.state.isPass){\r\n                return <ComposedComponent location={this.props.location} history={this.props.history} auth={auth}/>\r\n            } else {\r\n                return(\r\n                    <div>\r\n                        Checking...\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n    }\r\n    return AdminOnly\r\n}\r\n\r\nclass RouterManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div>\r\n            <Heading/>\r\n\r\n            {\r\n                this.props.auth.isLoaded?\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                <Main/>\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                <LoginPage/>\r\n                </Route>\r\n                <Route path=\"/article/:id\">\r\n                <ViewArticle/>\r\n                </Route>\r\n                <Route path=\"/new-article\" component={AdminOnly(NewArticle, this.props.auth)}>\r\n                </Route>\r\n            </Switch>\r\n            : ''\r\n            }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst enhance = connect(\r\n    ({firebase: {auth, profile}}) => ({\r\n        auth,\r\n        profile\r\n    })\r\n)\r\n\r\nexport default enhance(withRouter(RouterManager));","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getReduxStore, getRrfProp } from './config/firebase-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\n\nimport './App.css';\n\nimport RouterManager from './layout/RouterManager/RouterManager';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={getReduxStore()}>\n        <ReactReduxFirebaseProvider {...getRrfProp()}>\n        <Router>\n          <RouterManager/>\n        </Router>\n        </ReactReduxFirebaseProvider>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArticleCard\":\"ArticleCard_ArticleCard__1hN5m\",\"CardImage\":\"ArticleCard_CardImage__1d0Cx\",\"CardBody\":\"ArticleCard_CardBody__1I8Bm\",\"CardTitle\":\"ArticleCard_CardTitle__2BRap\",\"CardSubtitle\":\"ArticleCard_CardSubtitle__1p0lW\",\"ArticleLabel\":\"ArticleCard_ArticleLabel__VmZOD\",\"createDate\":\"ArticleCard_createDate__lZtXk\"};"],"sourceRoot":""}